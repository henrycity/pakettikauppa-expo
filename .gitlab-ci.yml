variables:
  GIT_CLEAN_FLAGS: -ffdx -e .yarn -e .jest -e node_modules/

image: node:14.15.0-alpine

stages:
  - lint
  - build
  - test
  - deploy

variables:
  CONTAINER_TEST_IMAGE: $CI_REGISTRY_IMAGE:$CI_COMMIT_REF_NAME

before_script:
  - yarn install --cache-folder .yarn --frozen-lockfile

# lint:
#   stage: lint
#   needs: []
#   script:
#     - yarn lint
#     - yarn type-check

# jest-tests:
#   stage: test
#   needs: []
#   script:
#     - yarn jest --coverage --ci --cacheDirectory .jest
#   artifacts:
#     reports:
#       cobertura: coverage/cobertura-coverage.xml

build-image:
  stage: build
  needs: []
  image: docker:stable
  before_script:
    - docker login -u gitlab-ci-token -p $CI_JOB_TOKEN $CI_REGISTRY
  script:
    - docker build -t $CONTAINER_TEST_IMAGE .
    - docker push $CONTAINER_TEST_IMAGE

e2e-tests:
  stage: test
  needs: ["build-image"]
  image: cypress/base:14.15.0
  variables:
    HTTPS: "true"
    EXPO_LOCAL_ADDRESS: https://backend:3000
    EXPO_SERVER: https://backend:3000
    CYPRESS_BASE_URL: https://expo:19006
    CYPRESS_BACKEND_URL: https://backend:3000
  services:
    - name: ${CI_REGISTRY}/aalto/pakettikauppa-backend:https
      alias: backend
    - name: $CONTAINER_TEST_IMAGE
      alias: expo
  script:
    - $(npm bin)/cypress run
  artifacts:
    when: always
    paths:
      - cypress/videos
      - cypress/screenshots

expo-deployments:
  stage: deploy
  script:
    - yarn global add expo-cli --cache-folder .yarn
    - yarn expo login -u $EXPO_USERNAME -p $EXPO_PASSWORD
    - yarn expo publish --non-interactive
  only:
    - master

netlify-deployment:
  stage: deploy
  script:
    - yarn global add expo-cli --cache-folder .yarn
    - yarn global add netlify-cli --cache-folder .yarn
    - yarn expo build:web
    - echo "/*    /index.html   200" > web-build/_redirects
    - netlify deploy --site $NETLIFY_SITE_ID --auth $NETLIFY_AUTH_TOKEN --prod
  only:
    - master
